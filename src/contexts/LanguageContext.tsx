import React, { createContext, useContext, useState } from 'react';

export type Language = 'pt' | 'en' | 'es';

interface LanguageContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string) => string;
}

const translations = {
  pt: {
    // Navigation
    'nav.home': 'Início',
    'nav.docs': 'Documentação',
    'nav.combobox': 'ComboBox',
    'nav.input': 'Input',
    'nav.select': 'Select', 
    'nav.textfield': 'TextField',
    'nav.radiobutton': 'RadioButton',
    'nav.checkbox': 'CheckBox',
    'nav.datatable': 'DataTable',
    'nav.fileupload': 'FileUpload',
    'nav.lightbox': 'LightBox',
    'nav.formmodal': 'FormModal',
    'nav.alert': 'Alert',
    'nav.toast': 'Toast',
    'nav.sweetalert': 'SweetAlert',
    'nav.linhatrajeto': 'LinhaTrajetoSelector',
    'nav.components': 'Componentes',
    
    // Home Page
    'home.title': 'Biblioteca de Componentes',
    'home.subtitle': 'Uma coleção moderna e reutilizável de componentes UI construídos com React, TypeScript e Tailwind CSS',
    'home.typescript': 'TypeScript',
    'home.design': 'Design System',
    'home.performance': 'Performance',
    'home.documentation': 'Documentação ComboBox',
    'home.viewDocs': 'Ver Documentação',
    
    // Hero Section
    'hero.title': 'ComboBox - Documentação',  
    'hero.subtitle': 'Componente avançado de seleção com suporte a múltiplas seleções, busca e carregamento de dados via API.',
    
    // Quick Start
    'quickstart.title': 'Quick Start',
    'quickstart.subtitle': 'Importe e use o ComboBox em seus componentes',
    
    // Installation
    'install.title': 'Instalação',
    'install.subtitle': 'Diferentes formas de instalar e usar a biblioteca',
    'install.npm.title': 'Via NPM',
    'install.npm.desc': 'Instale via gerenciador de pacotes',
    'install.cdn.title': 'Via CDN/Bucket',
    'install.cdn.desc': 'Importe diretamente de um bucket S3 ou CDN',
    'install.bitbucket.title': 'Via Bitbucket',
    'install.bitbucket.desc': 'Importe diretamente do repositório Bitbucket',
    'install.local.title': 'Instalação Local', 
    'install.local.desc': 'Clone e instale localmente',
    
    // Examples
    'examples.basic.title': 'Exemplo Básico',
    'examples.basic.desc': 'ComboBox simples com opções estáticas',
    'examples.multiple.title': 'Seleção Múltipla',
    'examples.multiple.desc': 'Permite selecionar múltiplas opções',
    'examples.api.title': 'Carregamento via API',
    'examples.api.desc': 'Busca dados de uma URL externa',
    'examples.variants.title': 'Variantes e Tamanhos',
    'examples.variants.desc': 'Diferentes estilos e tamanhos disponíveis',
    
    // Labels
    'label.framework': 'Framework JavaScript',
    'label.countries': 'Países de interesse',
    'label.users': 'Usuários da API',
    'label.select.framework': 'Selecione um framework...',
    'label.select.countries': 'Selecione países...',
    'label.select.users': 'Buscar usuários...',
    
    // Helpers
    'helper.api.data': 'Dados carregados de JSONPlaceholder',
    'helper.framework': 'Escolha sua tecnologia preferida',
    'helper.countries': 'Máximo de 3 países',
    
    // API Reference
    'api.title': 'Referência da API',
    'api.subtitle': 'Propriedades e tipos disponíveis no ComboBox',
    'api.property': 'Propriedade',
    'api.type': 'Tipo',
    'api.default': 'Padrão',
    'api.description': 'Descrição',
    
    // Features
    'features.title': 'Recursos Principais',
    'features.multiple': 'Seleção Múltipla',
    'features.multiple.desc': 'Selecione várias opções com limitação configurável',
    'features.search': 'Busca Inteligente',
    'features.search.desc': 'Filtragem em tempo real por label e descrição',
    'features.remote': 'Dados Remotos',
    'features.remote.desc': 'Carregamento automático de APIs externas',
    'features.customizable': 'Customizável',
    'features.customizable.desc': 'Múltiplas variantes e tamanhos',
    'features.accessible': 'Acessível',
    'features.accessible.desc': 'Suporte completo para navegação por teclado',
    'features.performance': 'Performance',
    'features.performance.desc': 'Otimizado com React.memo e useCallback',
    
    // Buttons
    'btn.copy': 'Copiar código',
    'btn.copied': 'Código copiado para a área de transferência!',
    
    // API Properties
    'prop.options': 'Lista de opções estáticas (opcional se usando fetchUrl)',
    'prop.fetchUrl': 'URL para buscar dados remotos',
    'prop.multiple': 'Permite seleção múltipla',
    'prop.searchable': 'Habilita busca nas opções',
    'prop.variant': 'Estilo visual do componente',
    'prop.size': 'Tamanho do componente',
    'prop.labelKey': 'Chave para o label dos dados remotos',
    'prop.valueKey': 'Chave para o value dos dados remotos',
    
    // Component Titles & Descriptions
    'component.input.title': 'Input',
    'component.input.description': 'Campo de entrada de texto com suporte a ícones, estados e validação',
    'component.select.title': 'Select',
    'component.select.description': 'Componente de seleção com dropdown customizável',
    'component.textfield.title': 'TextField',
    'component.textfield.description': 'Área de texto multi-linha com redimensionamento',
    'component.radiobutton.title': 'RadioButton',
    'component.radiobutton.description': 'Botões de opção para seleção única',
    'component.checkbox.title': 'CheckBox',
    'component.checkbox.description': 'Caixas de seleção com estados personalizados',
    'component.datatable.title': 'DataTable',
    'component.datatable.description': 'Tabela de dados com paginação, ordenação e filtragem',
    'component.combobox.title': 'ComboBox',
    'component.combobox.description': 'Seleção múltipla com busca e filtragem',
    'component.fileupload.title': 'FileUpload',
    'component.fileupload.description': 'Upload de arquivos com drag & drop e preview',
    'component.lightbox.title': 'LightBox',
    'component.lightbox.description': 'Visualizador de imagens em modal',
    'component.formmodal.title': 'FormModal',
    'component.formmodal.description': 'Modal com formulário integrado',
    'component.alert.title': 'Alert',
    'component.alert.description': 'Componente de alerta com diferentes variantes e ícones',
    'component.toast.title': 'Toast',
    'component.toast.description': 'Notificações temporárias com diferentes tipos e estilos',
    'component.sweetalert.title': 'SweetAlert',
    'component.sweetalert.description': 'Alertas modais elegantes e interativos com suporte a async',
    'component.linhatrajeto.title': 'LinhaTrajetoSelector',
    'component.linhatrajeto.description': 'Seletor duplo para linha e trajeto com cascata de dependência',
    
    // SweetAlert specific translations
    'sweetalert.hero.title': 'SweetAlert',
    'sweetalert.hero.subtitle': 'Crie alertas bonitos e interativos com confirmações, entradas de texto e operações assíncronas',
    'sweetalert.features.beautiful': 'Belos Alertas',
    'sweetalert.features.beautiful.desc': 'Design moderno com diferentes tipos visuais',
    'sweetalert.features.interactive': 'Interativo',
    'sweetalert.features.interactive.desc': 'Suporte a entrada de texto e botões personalizados',
    'sweetalert.features.accessible': 'Acessível', 
    'sweetalert.features.accessible.desc': 'Totalmente acessível com navegação por teclado',
    'sweetalert.examples.basic.title': 'Exemplo Básico',
    'sweetalert.examples.basic.desc': 'Alerta simples de confirmação',
    'sweetalert.examples.basic.button': 'Mostrar Alerta Básico',
    'sweetalert.examples.types.title': 'Tipos de Alerta',
    'sweetalert.examples.types.desc': 'Diferentes tipos visuais disponíveis',
    'sweetalert.examples.input.title': 'Alerta com Entrada',
    'sweetalert.examples.input.desc': 'Alerta que solicita entrada do usuário',
    'sweetalert.examples.input.button': 'Mostrar Alerta com Input',
    'sweetalert.examples.async.title': 'Operação Assíncrona',
    'sweetalert.examples.async.desc': 'Alerta com loading durante operação async',
    'sweetalert.examples.async.button': 'Operação Assíncrona',
    'sweetalert.example.basic.title': 'Você tem certeza?',
    'sweetalert.example.basic.text': 'Esta ação não poderá ser desfeita!',
    'sweetalert.example.confirmed.title': 'Confirmado!',
    'sweetalert.example.success.title': 'Sucesso!',
    'sweetalert.example.success.text': 'Operação realizada com sucesso',
    'sweetalert.example.error.title': 'Erro!',
    'sweetalert.example.error.text': 'Algo deu errado',
    'sweetalert.example.warning.title': 'Aviso!',
    'sweetalert.example.warning.text': 'Tenha cuidado com esta ação',
    'sweetalert.example.info.title': 'Informação',
    'sweetalert.example.info.text': 'Aqui está uma informação importante',
    'sweetalert.example.question.title': 'Pergunta?',
    'sweetalert.example.question.text': 'Você gostaria de continuar?',
    'sweetalert.example.input.title': 'Digite seu nome',
    'sweetalert.example.input.text': 'Por favor, insira seu nome completo',
    'sweetalert.example.input.placeholder': 'Seu nome aqui...',
    'sweetalert.example.input.success': 'Obrigado!',
    'sweetalert.example.input.entered': 'Você digitou',
    'sweetalert.example.async.title': 'Deletar registro?',
    'sweetalert.example.async.text': 'Esta operação irá deletar permanentemente o registro',
    'sweetalert.example.async.confirm': 'Sim, deletar!',
    'sweetalert.example.async.success': 'Deletado com sucesso!',
    'sweetalert.installation.desc': 'Como importar e usar o componente SweetAlert',
    'sweetalert.api.subtitle': 'Propriedades e tipos disponíveis no SweetAlert',
    'sweetalert.usage.desc': 'Guia completo de como usar o SweetAlert',
    'sweetalert.usage.hook.title': 'Usando o Hook',
    'sweetalert.usage.hook.desc': 'A forma mais fácil de usar o SweetAlert',
    'sweetalert.usage.component.title': 'Usando o Componente Diretamente',
    'sweetalert.usage.component.desc': 'Controle manual do estado do alerta',
    'sweetalert.prop.title': 'Título do alerta',
    'sweetalert.prop.text': 'Texto descritivo do alerta',
    'sweetalert.prop.type': 'Tipo visual do alerta (success, error, warning, info, question)',
    'sweetalert.prop.showCancelButton': 'Mostrar botão de cancelar',
    'sweetalert.prop.confirmButtonText': 'Texto do botão de confirmação',
    'sweetalert.prop.cancelButtonText': 'Texto do botão de cancelar',
    'sweetalert.prop.showInput': 'Mostrar campo de entrada de texto',
    'sweetalert.prop.inputPlaceholder': 'Placeholder do campo de entrada',
    'sweetalert.prop.onConfirm': 'Função chamada ao confirmar',
    'sweetalert.prop.onCancel': 'Função chamada ao cancelar',
    
    // Common Labels
    'common.examples': 'Exemplos',
    'common.props': 'Propriedades',
    'common.usage': 'Como usar',
    'common.installation': 'Instalação',
    'common.import': 'Importação',
    'common.basic': 'Básico',
    'common.intermediate': 'Intermediário',
    'common.advanced': 'Avançado',
    'common.variants': 'Variantes',
    'common.sizes': 'Tamanhos',
    'common.states': 'Estados',
    'common.customization': 'Personalização'
  },
  
  en: {
    // Navigation
    'nav.home': 'Home',
    'nav.docs': 'Documentation',
    'nav.combobox': 'ComboBox',
    'nav.input': 'Input',
    'nav.select': 'Select',
    'nav.textfield': 'TextField', 
    'nav.radiobutton': 'RadioButton',
    'nav.checkbox': 'CheckBox',
    'nav.datatable': 'DataTable',
    'nav.fileupload': 'FileUpload',
    'nav.lightbox': 'LightBox',
    'nav.formmodal': 'FormModal',
    'nav.alert': 'Alert',
    'nav.toast': 'Toast',
    'nav.sweetalert': 'SweetAlert',
    'nav.linhatrajeto': 'LinhaTrajetoSelector',
    'nav.components': 'Components',
    
    // Home Page
    'home.title': 'Component Library',
    'home.subtitle': 'A modern and reusable collection of UI components built with React, TypeScript and Tailwind CSS',
    'home.typescript': 'TypeScript',
    'home.design': 'Design System',
    'home.performance': 'Performance',
    'home.documentation': 'ComboBox Documentation',
    'home.viewDocs': 'View Documentation',
    
    // Hero Section
    'hero.title': 'ComboBox - Documentation',
    'hero.subtitle': 'Advanced selection component with support for multiple selections, search and API data loading.',
    
    // Quick Start
    'quickstart.title': 'Quick Start',
    'quickstart.subtitle': 'Import and use ComboBox in your components',
    
    // Installation
    'install.title': 'Installation',
    'install.subtitle': 'Different ways to install and use the library',
    'install.npm.title': 'Via NPM',
    'install.npm.desc': 'Install via package manager',
    'install.cdn.title': 'Via CDN/Bucket',
    'install.cdn.desc': 'Import directly from S3 bucket or CDN',
    'install.bitbucket.title': 'Via Bitbucket',
    'install.bitbucket.desc': 'Import directly from Bitbucket repository',
    'install.local.title': 'Local Installation',
    'install.local.desc': 'Clone and install locally',
    
    // Examples
    'examples.basic.title': 'Basic Example',
    'examples.basic.desc': 'Simple ComboBox with static options',
    'examples.multiple.title': 'Multiple Selection',
    'examples.multiple.desc': 'Allows selecting multiple options',
    'examples.api.title': 'API Loading',
    'examples.api.desc': 'Fetch data from external URL',
    'examples.variants.title': 'Variants and Sizes',
    'examples.variants.desc': 'Different styles and sizes available',
    
    // Labels
    'label.framework': 'JavaScript Framework',
    'label.countries': 'Countries of interest',
    'label.users': 'API Users',
    'label.select.framework': 'Select a framework...',
    'label.select.countries': 'Select countries...',
    'label.select.users': 'Search users...',
    
    // Helpers
    'helper.api.data': 'Data loaded from JSONPlaceholder',
    'helper.framework': 'Choose your preferred technology',
    'helper.countries': 'Maximum of 3 countries',
    
    // API Reference
    'api.title': 'API Reference',
    'api.subtitle': 'Available properties and types in ComboBox',
    'api.property': 'Property',
    'api.type': 'Type',
    'api.default': 'Default',
    'api.description': 'Description',
    
    // Features
    'features.title': 'Key Features',
    'features.multiple': 'Multiple Selection',
    'features.multiple.desc': 'Select multiple options with configurable limit',
    'features.search': 'Smart Search',
    'features.search.desc': 'Real-time filtering by label and description',
    'features.remote': 'Remote Data',
    'features.remote.desc': 'Automatic loading from external APIs',
    'features.customizable': 'Customizable',
    'features.customizable.desc': 'Multiple variants and sizes',
    'features.accessible': 'Accessible',
    'features.accessible.desc': 'Full keyboard navigation support',
    'features.performance': 'Performance',
    'features.performance.desc': 'Optimized with React.memo and useCallback',
    
    // Buttons
    'btn.copy': 'Copy code',
    'btn.copied': 'Code copied to clipboard!',
    
    // API Properties
    'prop.options': 'Static options list (optional if using fetchUrl)',
    'prop.fetchUrl': 'URL to fetch remote data',
    'prop.multiple': 'Allows multiple selection',
    'prop.searchable': 'Enables search in options',
    'prop.variant': 'Component visual style',
    'prop.size': 'Component size',
    'prop.labelKey': 'Key for label in remote data',
    'prop.valueKey': 'Key for value in remote data',
    
    // Component Titles & Descriptions
    'component.input.title': 'Input',
    'component.input.description': 'Text input field with icon support, states and validation',
    'component.select.title': 'Select',
    'component.select.description': 'Selection component with customizable dropdown',
    'component.textfield.title': 'TextField',
    'component.textfield.description': 'Multi-line text area with resizing',
    'component.radiobutton.title': 'RadioButton',
    'component.radiobutton.description': 'Radio buttons for single selection',
    'component.checkbox.title': 'CheckBox',
    'component.checkbox.description': 'Selection boxes with custom states',
    'component.datatable.title': 'DataTable',
    'component.datatable.description': 'Data table with pagination, sorting and filtering',
    'component.combobox.title': 'ComboBox',
    'component.combobox.description': 'Multiple selection with search and filtering',
    'component.fileupload.title': 'FileUpload',
    'component.fileupload.description': 'File upload with drag & drop and preview',
    'component.lightbox.title': 'LightBox',
    'component.lightbox.description': 'Image viewer in modal',
    'component.formmodal.title': 'FormModal',
    'component.formmodal.description': 'Modal with integrated form',
    'component.alert.title': 'Alert',
    'component.alert.description': 'Alert component with different variants and icons',
    'component.toast.title': 'Toast',
    'component.toast.description': 'Temporary notifications with different types and styles',
    'component.sweetalert.title': 'SweetAlert',
    'component.sweetalert.description': 'Elegant and interactive modal alerts with async support',
    'component.linhatrajeto.title': 'LinhaTrajetoSelector',
    'component.linhatrajeto.description': 'Dual selector for line and route with dependency cascade',
    
    // SweetAlert specific translations
    'sweetalert.hero.title': 'SweetAlert',
    'sweetalert.hero.subtitle': 'Create beautiful and interactive alerts with confirmations, text inputs and asynchronous operations',
    'sweetalert.features.beautiful': 'Beautiful Alerts',
    'sweetalert.features.beautiful.desc': 'Modern design with different visual types',
    'sweetalert.features.interactive': 'Interactive',
    'sweetalert.features.interactive.desc': 'Support for text input and custom buttons',
    'sweetalert.features.accessible': 'Accessible',
    'sweetalert.features.accessible.desc': 'Fully accessible with keyboard navigation',
    'sweetalert.examples.basic.title': 'Basic Example',
    'sweetalert.examples.basic.desc': 'Simple confirmation alert',
    'sweetalert.examples.basic.button': 'Show Basic Alert',
    'sweetalert.examples.types.title': 'Alert Types',
    'sweetalert.examples.types.desc': 'Different visual types available',
    'sweetalert.examples.input.title': 'Input Alert',
    'sweetalert.examples.input.desc': 'Alert that requests user input',
    'sweetalert.examples.input.button': 'Show Input Alert',
    'sweetalert.examples.async.title': 'Async Operation',
    'sweetalert.examples.async.desc': 'Alert with loading during async operation',
    'sweetalert.examples.async.button': 'Async Operation',
    'sweetalert.example.basic.title': 'Are you sure?',
    'sweetalert.example.basic.text': 'This action cannot be undone!',
    'sweetalert.example.confirmed.title': 'Confirmed!',
    'sweetalert.example.success.title': 'Success!',
    'sweetalert.example.success.text': 'Operation completed successfully',
    'sweetalert.example.error.title': 'Error!',
    'sweetalert.example.error.text': 'Something went wrong',
    'sweetalert.example.warning.title': 'Warning!',
    'sweetalert.example.warning.text': 'Be careful with this action',
    'sweetalert.example.info.title': 'Information',
    'sweetalert.example.info.text': 'Here is some important information',
    'sweetalert.example.question.title': 'Question?',
    'sweetalert.example.question.text': 'Would you like to continue?',
    'sweetalert.example.input.title': 'Enter your name',
    'sweetalert.example.input.text': 'Please enter your full name',
    'sweetalert.example.input.placeholder': 'Your name here...',
    'sweetalert.example.input.success': 'Thank you!',
    'sweetalert.example.input.entered': 'You entered',
    'sweetalert.example.async.title': 'Delete record?',
    'sweetalert.example.async.text': 'This operation will permanently delete the record',
    'sweetalert.example.async.confirm': 'Yes, delete!',
    'sweetalert.example.async.success': 'Successfully deleted!',
    'sweetalert.installation.desc': 'How to import and use the SweetAlert component',
    'sweetalert.api.subtitle': 'Available properties and types in SweetAlert',
    'sweetalert.usage.desc': 'Complete guide on how to use SweetAlert',
    'sweetalert.usage.hook.title': 'Using the Hook',
    'sweetalert.usage.hook.desc': 'The easiest way to use SweetAlert',
    'sweetalert.usage.component.title': 'Using the Component Directly',
    'sweetalert.usage.component.desc': 'Manual control of alert state',
    'sweetalert.prop.title': 'Alert title',
    'sweetalert.prop.text': 'Descriptive text of the alert',
    'sweetalert.prop.type': 'Visual type of alert (success, error, warning, info, question)',
    'sweetalert.prop.showCancelButton': 'Show cancel button',
    'sweetalert.prop.confirmButtonText': 'Confirm button text',
    'sweetalert.prop.cancelButtonText': 'Cancel button text',
    'sweetalert.prop.showInput': 'Show text input field',
    'sweetalert.prop.inputPlaceholder': 'Input field placeholder',
    'sweetalert.prop.onConfirm': 'Function called on confirm',
    'sweetalert.prop.onCancel': 'Function called on cancel',
    
    // Common Labels
    'common.examples': 'Examples',
    'common.props': 'Properties',
    'common.usage': 'Usage',
    'common.installation': 'Installation',
    'common.import': 'Import',
    'common.basic': 'Basic',
    'common.intermediate': 'Intermediate',
    'common.advanced': 'Advanced',
    'common.variants': 'Variants',
    'common.sizes': 'Sizes',
    'common.states': 'States',
    'common.customization': 'Customization'
  },
  
  es: {
    // Navigation
    'nav.home': 'Inicio',
    'nav.docs': 'Documentación',
    'nav.combobox': 'ComboBox',
    'nav.input': 'Input',
    'nav.select': 'Select',
    'nav.textfield': 'TextField',
    'nav.radiobutton': 'RadioButton',
    'nav.checkbox': 'CheckBox',
    'nav.datatable': 'DataTable',
    'nav.fileupload': 'FileUpload',
    'nav.lightbox': 'LightBox',
    'nav.formmodal': 'FormModal',
    'nav.alert': 'Alert',
    'nav.toast': 'Toast',
    'nav.sweetalert': 'SweetAlert',
    'nav.linhatrajeto': 'LinhaTrajetoSelector',
    'nav.components': 'Componentes',
    
    // Home Page
    'home.title': 'Biblioteca de Componentes',
    'home.subtitle': 'Una colección moderna y reutilizable de componentes UI construidos con React, TypeScript y Tailwind CSS',
    'home.typescript': 'TypeScript',
    'home.design': 'Sistema de Diseño',
    'home.performance': 'Rendimiento',
    'home.documentation': 'Documentación ComboBox',
    'home.viewDocs': 'Ver Documentación',
    
    // Hero Section
    'hero.title': 'ComboBox - Documentación',
    'hero.subtitle': 'Componente avanzado de selección con soporte para múltiples selecciones, búsqueda y carga de datos via API.',
    
    // Quick Start
    'quickstart.title': 'Inicio Rápido',
    'quickstart.subtitle': 'Importa y usa ComboBox en tus componentes',
    
    // Installation
    'install.title': 'Instalación',
    'install.subtitle': 'Diferentes formas de instalar y usar la biblioteca',
    'install.npm.title': 'Via NPM',
    'install.npm.desc': 'Instalar via gestor de paquetes',
    'install.cdn.title': 'Via CDN/Bucket',
    'install.cdn.desc': 'Importar directamente desde bucket S3 o CDN',
    'install.bitbucket.title': 'Via Bitbucket',
    'install.bitbucket.desc': 'Importar directamente desde repositorio Bitbucket',
    'install.local.title': 'Instalación Local',
    'install.local.desc': 'Clonar e instalar localmente',
    
    // Examples
    'examples.basic.title': 'Ejemplo Básico',
    'examples.basic.desc': 'ComboBox simple con opciones estáticas',
    'examples.multiple.title': 'Selección Múltiple',
    'examples.multiple.desc': 'Permite seleccionar múltiples opciones',
    'examples.api.title': 'Carga via API',
    'examples.api.desc': 'Obtiene datos de una URL externa',
    'examples.variants.title': 'Variantes y Tamaños',
    'examples.variants.desc': 'Diferentes estilos y tamaños disponibles',
    
    // Labels
    'label.framework': 'Framework JavaScript',
    'label.countries': 'Países de interés',
    'label.users': 'Usuarios de la API',
    'label.select.framework': 'Selecciona un framework...',
    'label.select.countries': 'Selecciona países...',
    'label.select.users': 'Buscar usuarios...',
    
    // Helpers
    'helper.api.data': 'Datos cargados desde JSONPlaceholder',
    'helper.framework': 'Elige tu tecnología preferida',
    'helper.countries': 'Máximo de 3 países',
    
    // API Reference
    'api.title': 'Referencia de la API',
    'api.subtitle': 'Propiedades y tipos disponibles en ComboBox',
    'api.property': 'Propiedad',
    'api.type': 'Tipo',
    'api.default': 'Por defecto',
    'api.description': 'Descripción',
    
    // Features
    'features.title': 'Características Principales',
    'features.multiple': 'Selección Múltiple',
    'features.multiple.desc': 'Selecciona varias opciones con límite configurable',
    'features.search': 'Búsqueda Inteligente',
    'features.search.desc': 'Filtrado en tiempo real por etiqueta y descripción',
    'features.remote': 'Datos Remotos',
    'features.remote.desc': 'Carga automática desde APIs externas',
    'features.customizable': 'Personalizable',
    'features.customizable.desc': 'Múltiples variantes y tamaños',
    'features.accessible': 'Accesible',
    'features.accessible.desc': 'Soporte completo para navegación por teclado',
    'features.performance': 'Rendimiento',
    'features.performance.desc': 'Optimizado con React.memo y useCallback',
    
    // Buttons
    'btn.copy': 'Copiar código',
    'btn.copied': '¡Código copiado al portapapeles!',
    
    // API Properties
    'prop.options': 'Lista de opciones estáticas (opcional si usa fetchUrl)',
    'prop.fetchUrl': 'URL para obtener datos remotos',
    'prop.multiple': 'Permite selección múltiple',
    'prop.searchable': 'Habilita búsqueda en opciones',
    'prop.variant': 'Estilo visual del componente',
    'prop.size': 'Tamaño del componente',
    'prop.labelKey': 'Clave para la etiqueta en datos remotos',
    'prop.valueKey': 'Clave para el valor en datos remotos',
    
    // Component Titles & Descriptions
    'component.input.title': 'Input',
    'component.input.description': 'Campo de entrada de texto con soporte para íconos, estados y validación',
    'component.select.title': 'Select',
    'component.select.description': 'Componente de selección con dropdown personalizable',
    'component.textfield.title': 'TextField',
    'component.textfield.description': 'Área de texto multi-línea con redimensionamiento',
    'component.radiobutton.title': 'RadioButton',
    'component.radiobutton.description': 'Botones de opción para selección única',
    'component.checkbox.title': 'CheckBox',
    'component.checkbox.description': 'Casillas de selección con estados personalizados',
    'component.datatable.title': 'DataTable',
    'component.datatable.description': 'Tabla de datos con paginación, ordenación y filtrado',
    'component.combobox.title': 'ComboBox',
    'component.combobox.description': 'Selección múltiple con búsqueda y filtrado',
    'component.fileupload.title': 'FileUpload',
    'component.fileupload.description': 'Subida de archivos con arrastrar y soltar y vista previa',
    'component.lightbox.title': 'LightBox',
    'component.lightbox.description': 'Visor de imágenes en modal',
    'component.formmodal.title': 'FormModal',
    'component.formmodal.description': 'Modal con formulario integrado',
    'component.alert.title': 'Alert',
    'component.alert.description': 'Componente de alerta con diferentes variantes e íconos',
    'component.toast.title': 'Toast',
    'component.toast.description': 'Notificaciones temporales con diferentes tipos y estilos',
    'component.sweetalert.title': 'SweetAlert',
    'component.sweetalert.description': 'Alertas modales elegantes e interactivos con soporte async',
    'component.linhatrajeto.title': 'LinhaTrajetoSelector',
    'component.linhatrajeto.description': 'Selector dual para línea y trayecto con cascada de dependencia',
    
    // SweetAlert specific translations
    'sweetalert.hero.title': 'SweetAlert',
    'sweetalert.hero.subtitle': 'Crea alertas bonitas e interactivas con confirmaciones, entradas de texto y operaciones asíncronas',
    'sweetalert.features.beautiful': 'Alertas Hermosas',
    'sweetalert.features.beautiful.desc': 'Diseño moderno con diferentes tipos visuales',
    'sweetalert.features.interactive': 'Interactivo',
    'sweetalert.features.interactive.desc': 'Soporte para entrada de texto y botones personalizados',
    'sweetalert.features.accessible': 'Accesible',
    'sweetalert.features.accessible.desc': 'Totalmente accesible con navegación por teclado',
    'sweetalert.examples.basic.title': 'Ejemplo Básico',
    'sweetalert.examples.basic.desc': 'Alerta simple de confirmación',
    'sweetalert.examples.basic.button': 'Mostrar Alerta Básica',
    'sweetalert.examples.types.title': 'Tipos de Alerta',
    'sweetalert.examples.types.desc': 'Diferentes tipos visuales disponibles',
    'sweetalert.examples.input.title': 'Alerta con Entrada',
    'sweetalert.examples.input.desc': 'Alerta que solicita entrada del usuario',
    'sweetalert.examples.input.button': 'Mostrar Alerta con Input',
    'sweetalert.examples.async.title': 'Operación Asíncrona',
    'sweetalert.examples.async.desc': 'Alerta con loading durante operación async',
    'sweetalert.examples.async.button': 'Operación Asíncrona',
    'sweetalert.example.basic.title': '¿Estás seguro?',
    'sweetalert.example.basic.text': '¡Esta acción no se puede deshacer!',
    'sweetalert.example.confirmed.title': '¡Confirmado!',
    'sweetalert.example.success.title': '¡Éxito!',
    'sweetalert.example.success.text': 'Operación completada con éxito',
    'sweetalert.example.error.title': '¡Error!',
    'sweetalert.example.error.text': 'Algo salió mal',
    'sweetalert.example.warning.title': '¡Advertencia!',
    'sweetalert.example.warning.text': 'Ten cuidado con esta acción',
    'sweetalert.example.info.title': 'Información',
    'sweetalert.example.info.text': 'Aquí tienes información importante',
    'sweetalert.example.question.title': '¿Pregunta?',
    'sweetalert.example.question.text': '¿Te gustaría continuar?',
    'sweetalert.example.input.title': 'Ingresa tu nombre',
    'sweetalert.example.input.text': 'Por favor, ingresa tu nombre completo',
    'sweetalert.example.input.placeholder': 'Tu nombre aquí...',
    'sweetalert.example.input.success': '¡Gracias!',
    'sweetalert.example.input.entered': 'Ingresaste',
    'sweetalert.example.async.title': '¿Eliminar registro?',
    'sweetalert.example.async.text': 'Esta operación eliminará permanentemente el registro',
    'sweetalert.example.async.confirm': '¡Sí, eliminar!',
    'sweetalert.example.async.success': '¡Eliminado con éxito!',
    'sweetalert.installation.desc': 'Cómo importar y usar el componente SweetAlert',
    'sweetalert.api.subtitle': 'Propiedades y tipos disponibles en SweetAlert',
    'sweetalert.usage.desc': 'Guía completa sobre cómo usar SweetAlert',
    'sweetalert.usage.hook.title': 'Usando el Hook',
    'sweetalert.usage.hook.desc': 'La forma más fácil de usar SweetAlert',
    'sweetalert.usage.component.title': 'Usando el Componente Directamente',
    'sweetalert.usage.component.desc': 'Control manual del estado de la alerta',
    'sweetalert.prop.title': 'Título de la alerta',
    'sweetalert.prop.text': 'Texto descriptivo de la alerta',
    'sweetalert.prop.type': 'Tipo visual de alerta (success, error, warning, info, question)',
    'sweetalert.prop.showCancelButton': 'Mostrar botón de cancelar',
    'sweetalert.prop.confirmButtonText': 'Texto del botón de confirmación',
    'sweetalert.prop.cancelButtonText': 'Texto del botón de cancelar',
    'sweetalert.prop.showInput': 'Mostrar campo de entrada de texto',
    'sweetalert.prop.inputPlaceholder': 'Placeholder del campo de entrada',
    'sweetalert.prop.onConfirm': 'Función llamada al confirmar',
    'sweetalert.prop.onCancel': 'Función llamada al cancelar',
    
    // Common Labels
    'common.examples': 'Ejemplos',
    'common.props': 'Propiedades',
    'common.usage': 'Uso',
    'common.installation': 'Instalación',
    'common.import': 'Importación',
    'common.basic': 'Básico',
    'common.intermediate': 'Intermedio',
    'common.advanced': 'Avanzado',
    'common.variants': 'Variantes',
    'common.sizes': 'Tamaños',
    'common.states': 'Estados',
    'common.customization': 'Personalización'
  }
};

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};

export const LanguageProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const [language, setLanguage] = useState<Language>('pt');

  const t = (key: string): string => {
    return translations[language][key] || key;
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};